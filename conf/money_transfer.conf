targetEnv = local

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  test.timefactor = 5.0

  actor {
    core-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "thread-pool-executor"
      # Configuration for the thread pool
      thread-pool-executor {
        # minimum number of threads to cap factor-based core number to
        core-pool-size-min = 1
        # No of core threads ... ceil(available processors * factor)
        core-pool-size-factor = 2.0
        # maximum number of threads to cap factor-based number to
        core-pool-size-max = 2
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 1
    }
  }
}

loggingMetaTags {
  runtime = [
    "accountId"
  ]
}

local {
  service {
    # keeping actor rety count to 0 to avoid rolling back the transfer amount to 'withdraw' account multiple times
    retries = 0
    metrics = true
    targetEnv = local
    executorDispatcherType = "akka.actor.my-thread-pool-dispatcher"
    numActorInstances = 2
    accountsFilePath = "accounts/accounts_detail.json"
    withdraw { # 'withdraw' actor config
      accountKey = "accountId"
    }
    deposit { # 'deposit' actor config
      accountKey = "body.depositAccountId"
    }
    db {
      # 'db' actor is simply defined as a placeholder for providing the params to connect to DB.
      # The DbInsert actor which uses this actor config currently just logs as if it's connected
      # to DB and transaction is stored to DB
      database = "accounts"
      schema = "customer_transaction_details"
      table = "account_detail"
      username = "root"
      password = "root"
      host = "localhost"
      port = "8000"
      sslmode = "disable"
      connectTimeout = "2"
      socketTimeout = "2"
      statementTimeout = "200"
      schemaSQL = ""
    }
  }
}
