targetEnv = test

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "error"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  test.timefactor = 5.0

  actor {
    core-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "thread-pool-executor"
      # Configuration for the thread pool
      thread-pool-executor {
        # minimum number of threads to cap factor-based core number to
        core-pool-size-min = 1
        # No of core threads ... ceil(available processors * factor)
        core-pool-size-factor = 2.0
        # maximum number of threads to cap factor-based number to
        core-pool-size-max = 2
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 1
    }
  }
}

test {
  service = {
    test1 = 1
    test2 = 2
    test3 = "test3"
    risk = {
      "someVar" = "someValue"
    }
  }
}

